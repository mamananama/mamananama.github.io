<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-06-03T16:31:23+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">mamananama.github.io</title><entry><title type="html">Docker 설치하기</title><link href="http://localhost:4000/docker/2025/06/03/docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0.html" rel="alternate" type="text/html" title="Docker 설치하기" /><published>2025-06-03T16:25:54+09:00</published><updated>2025-06-03T16:25:54+09:00</updated><id>http://localhost:4000/docker/2025/06/03/docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/docker/2025/06/03/docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0.html"><![CDATA[]]></content><author><name></name></author><category term="Docker" /><category term="Docker" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Container 알아보기</title><link href="http://localhost:4000/categories/Docker/docker-introduction" rel="alternate" type="text/html" title="Container 알아보기" /><published>2025-05-14T21:43:54+09:00</published><updated>2025-05-14T21:43:54+09:00</updated><id>http://localhost:4000/categories/Docker/docker-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/categories/Docker/docker-introduction"><![CDATA[<h2 id="프로그램-배포에서-발생하는-문제">프로그램 배포에서 발생하는 문제</h2>

<p>본격적인 Docker 및 Container 기술을 사용하기 이전에, 이를 사용하는 환경에 대해 알아보자.</p>

<p>로컬 환경에서 알맞게 돌아가던 개발 프로그램을 실제 서비스 환경으로 배포하는 경우, 프로그램이 실행되지 않는 문제가 발생할 수 있다.</p>

<p>개발 환경에 설치한 라이브러리가 서비스 환경에 설치되어 있지 않다던가, OS가 다르다던가, 환경변수가 다르다던가, 혹은 설치된 JVM 버전이 맞지 않다던가…</p>

<p>이런 문제를 해결하기 위해 개발 환경에서 사용하는 프로그램을 모두 설치하고, 환경변수를 설정하고, 라이브러리를 설치하고, 모든 것이 완료되면 배포한다.</p>

<p><img src="/assets/posts/250512/no.png" alt="개발 프로그램만 배포했을 경우 필요한 환경이 갖춰지지 않아 배포 환경에서 실행이 되지 않을 수 있다." width="70%" style="padding: 16px" /></p>

<p>하지만 이는 매우 비효율적이며 많은 시간이 소비되는 번거로운 작업이다.</p>

<h2 id="container를-사용한-배포">Container를 사용한 배포</h2>

<p>Container Image를 통해 배포하는 경우, 위에서 언급한 문제를 쉽게 해결할 수 있다.</p>

<p><img src="/assets/posts/250512/yes.png" alt="Container Image를 사용하여 배포하면 프로그램 실행에 필요한 환경을 먼저 구성한 채 배포할 수 있다." width="70%" style="padding: 16px" /></p>

<p>프로그램의 실행에 필요한 환경을 미리 구성하여 Container Image로 저장하면, 프로그램을 배포할 때 미리 구성된 환경을 사용하여 프로그램을 실행할 수 있다.</p>

<p>이렇게 Container Image만 관리하여 프로그램을 배포하면 개발 환경 또는 운영 환경의 환경이 다르더라도 프로그램이 정상적으로 실행될 수 있도록 관리할 수 있다.</p>

<h2 id="container는-하나의-리눅스-커널-위에서-실행되는-독립적인-리눅스-시스템">Container는 하나의 리눅스 커널 위에서 실행되는 독립적인 리눅스 시스템</h2>

<p>각각의 Container는 하나의 리눅스 커널 위에서 실행되는 독립적인 리눅스 시스템이다.</p>

<p>여기에서 가상머신과 차이가 발생하는데, 가상머신은 각 가상머신 별로 독립적인 커널을 사용하여 독립적인 운영체제를 실행한다.</p>

<p>따라서 Container와 비교했을 때 가상머신의 환경은 무겁고, 일반적인 기기 환경에서 동시에 여러 가상머신을 실행하여 서비스를 제공하는 것에 무리가 있다.</p>

<p>Container는 하나의 공유되는 커널을 통하여 독립적인 시스템을 실행하기 때문에, 가상머신을 통하여 제공되는 환경에 비하여 더 가볍고, 더 많은 시스템을 동시에 실행할 수 있다.</p>

<p><img src="/assets/posts/250512/containers.png" alt="Container는 리눅스 커널 위에서 독립적으로 실행된다." style="padding: 16px" /></p>

<hr />
<h2 id="참고-링크">참고 링크</h2>

<p><a href="https://ko.wikipedia.org/wiki/LXC" id="url">LXC(Linux Containers) 위키피디아 링크</a></p>

<p><a href="https://linuxcontainers.org/" id="url">Linux Containers 공식 홈페이지</a></p>

<p><a href="https://www.udemy.com/course/docker-java-developer/" id="url">[Udemy] Docker - Java 개발자를 위한 완벽 실습 과정</a></p>]]></content><author><name></name></author><category term="Docker" /><category term="Docker" /><summary type="html"><![CDATA[Container 알아보기]]></summary></entry></feed>